// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SICUENTANOS_Back.Models;

#nullable disable

namespace SICUENTANOS_Back.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220813162512_ChangeTableNameRangoGestion")]
    partial class ChangeTableNameRangoGestion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SICUENTANOS_Back.Models.Administrador.Actividad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("BEstado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DtFechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtFechaAnulacion")
                        .HasColumnType("datetime2")
                        .HasComment("Fecha anulación del registro");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModuloId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PadreId")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("Id de la actividad padre de acuerdo con la jerarquia");

                    b.Property<string>("VcDescripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("VcIcono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VcNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VcRedireccion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("ModuloId");

                    b.ToTable("Actividad", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b235b97e-e79a-481a-ad19-cb314e5e8ea7"),
                            BEstado = true,
                            DtFechaActualizacion = new DateTime(2022, 8, 13, 11, 15, 9, 749, DateTimeKind.Local).AddTicks(9773),
                            DtFechaCreacion = new DateTime(2022, 8, 13, 11, 15, 9, 749, DateTimeKind.Local).AddTicks(9773),
                            ModuloId = new Guid("60751df3-44f7-4da9-9a98-9b85aa39a8c4"),
                            VcDescripcion = "Gestión de personas",
                            VcIcono = "bi bi-person",
                            VcNombre = "Personas",
                            VcRedireccion = "#"
                        },
                        new
                        {
                            Id = new Guid("9f8333eb-c849-4db5-9147-7fee695d507c"),
                            BEstado = true,
                            DtFechaActualizacion = new DateTime(2022, 8, 13, 11, 15, 9, 749, DateTimeKind.Local).AddTicks(9773),
                            DtFechaCreacion = new DateTime(2022, 8, 13, 11, 15, 9, 749, DateTimeKind.Local).AddTicks(9773),
                            ModuloId = new Guid("60751df3-44f7-4da9-9a98-9b85aa39a8c4"),
                            VcDescripcion = "Gestión de roles",
                            VcIcono = "bi bi-person-rolodex",
                            VcNombre = "Roles",
                            VcRedireccion = "/actividad"
                        },
                        new
                        {
                            Id = new Guid("651fb52a-eff0-4ba8-8639-8eb415cd177f"),
                            BEstado = true,
                            DtFechaActualizacion = new DateTime(2022, 8, 13, 11, 15, 9, 749, DateTimeKind.Local).AddTicks(9773),
                            DtFechaCreacion = new DateTime(2022, 8, 13, 11, 15, 9, 749, DateTimeKind.Local).AddTicks(9773),
                            ModuloId = new Guid("60751df3-44f7-4da9-9a98-9b85aa39a8c4"),
                            VcDescripcion = "Configuración General",
                            VcIcono = "bi bi-person-rolodex",
                            VcNombre = "Configuración",
                            VcRedireccion = "#"
                        },
                        new
                        {
                            Id = new Guid("f1de5c86-a834-44e6-96fd-d5f7eb2c1565"),
                            BEstado = true,
                            DtFechaActualizacion = new DateTime(2022, 8, 13, 11, 15, 9, 749, DateTimeKind.Local).AddTicks(9773),
                            DtFechaCreacion = new DateTime(2022, 8, 13, 11, 15, 9, 749, DateTimeKind.Local).AddTicks(9773),
                            ModuloId = new Guid("60751df3-44f7-4da9-9a98-9b85aa39a8c4"),
                            PadreId = "b235b97e-e79a-481a-ad19-cb314e5e8ea7",
                            VcDescripcion = "Gestión de usuarios",
                            VcIcono = "",
                            VcNombre = "Uusarios",
                            VcRedireccion = "/usuario"
                        },
                        new
                        {
                            Id = new Guid("136e80b6-663e-42d3-bc36-b63463f4ed88"),
                            BEstado = true,
                            DtFechaActualizacion = new DateTime(2022, 8, 13, 11, 15, 9, 749, DateTimeKind.Local).AddTicks(9773),
                            DtFechaCreacion = new DateTime(2022, 8, 13, 11, 15, 9, 749, DateTimeKind.Local).AddTicks(9773),
                            ModuloId = new Guid("60751df3-44f7-4da9-9a98-9b85aa39a8c4"),
                            PadreId = "b235b97e-e79a-481a-ad19-cb314e5e8ea7",
                            VcDescripcion = "Gestión de Cargos",
                            VcIcono = "",
                            VcNombre = "Cargos",
                            VcRedireccion = "/cargos"
                        },
                        new
                        {
                            Id = new Guid("7102d0db-d846-488e-b485-a6518aeb722d"),
                            BEstado = true,
                            DtFechaActualizacion = new DateTime(2022, 8, 13, 11, 15, 9, 749, DateTimeKind.Local).AddTicks(9773),
                            DtFechaCreacion = new DateTime(2022, 8, 13, 11, 15, 9, 749, DateTimeKind.Local).AddTicks(9773),
                            ModuloId = new Guid("60751df3-44f7-4da9-9a98-9b85aa39a8c4"),
                            PadreId = "b235b97e-e79a-481a-ad19-cb314e5e8ea7",
                            VcDescripcion = "Gestión de Áreas",
                            VcIcono = "",
                            VcNombre = "Áreas",
                            VcRedireccion = "#"
                        },
                        new
                        {
                            Id = new Guid("efaf2845-3c4e-44b1-9385-29781eb7247d"),
                            BEstado = true,
                            DtFechaActualizacion = new DateTime(2022, 8, 13, 11, 15, 9, 749, DateTimeKind.Local).AddTicks(9773),
                            DtFechaCreacion = new DateTime(2022, 8, 13, 11, 15, 9, 749, DateTimeKind.Local).AddTicks(9773),
                            ModuloId = new Guid("60751df3-44f7-4da9-9a98-9b85aa39a8c4"),
                            PadreId = "b235b97e-e79a-481a-ad19-cb314e5e8ea7",
                            VcDescripcion = "Gestión de Puntos de Atención",
                            VcIcono = "bi bi-person",
                            VcNombre = "Puntos de Atención",
                            VcRedireccion = "#"
                        });
                });

            modelBuilder.Entity("SICUENTANOS_Back.Models.Administrador.Configuracion", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<bool>("BDomingoLaboral")
                        .HasMaxLength(50)
                        .HasColumnType("bit");

                    b.Property<bool>("BEstado")
                        .HasColumnType("bit");

                    b.Property<bool>("BSabadoLaboral")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DtFechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IDiasLimiteRespuesta")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Configuracion", (string)null);
                });

            modelBuilder.Entity("SICUENTANOS_Back.Models.Administrador.DiasFestivo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DtFecha")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("VcDescripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DiasFestivo", (string)null);
                });

            modelBuilder.Entity("SICUENTANOS_Back.Models.Administrador.Modulo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("BEstado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DtFechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtFechaAnulacion")
                        .HasColumnType("datetime2")
                        .HasComment("Fecha Eliminacion del registro");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("VcDescripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("VcIcono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VcNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VcRedireccion")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Modulo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("60751df3-44f7-4da9-9a98-9b85aa39a8c4"),
                            BEstado = true,
                            DtFechaActualizacion = new DateTime(2022, 8, 13, 11, 15, 9, 749, DateTimeKind.Local).AddTicks(9773),
                            DtFechaCreacion = new DateTime(2022, 8, 13, 11, 15, 9, 749, DateTimeKind.Local).AddTicks(9773),
                            VcDescripcion = "Modulo para gestionar los permisos de los usuarios dentro del aplicativo",
                            VcIcono = "bi bi-sliders",
                            VcNombre = "Administrador"
                        },
                        new
                        {
                            Id = new Guid("b000f22f-b327-4cc8-afce-1ec3e1a9217f"),
                            BEstado = true,
                            DtFechaActualizacion = new DateTime(2022, 8, 13, 11, 15, 9, 749, DateTimeKind.Local).AddTicks(9773),
                            DtFechaCreacion = new DateTime(2022, 8, 13, 11, 15, 9, 749, DateTimeKind.Local).AddTicks(9773),
                            VcDescripcion = "Modulo para registrar la gestión de orientación e información de la Dirección de Servicio a la Ciudadanía DSC",
                            VcIcono = "bi bi-info-circle-fill",
                            VcNombre = "Orientación e Información"
                        },
                        new
                        {
                            Id = new Guid("3246a53f-e88e-45cf-ad93-a5083714f2c6"),
                            BEstado = true,
                            DtFechaActualizacion = new DateTime(2022, 8, 13, 11, 15, 9, 749, DateTimeKind.Local).AddTicks(9773),
                            DtFechaCreacion = new DateTime(2022, 8, 13, 11, 15, 9, 749, DateTimeKind.Local).AddTicks(9773),
                            VcDescripcion = "Modulo para realizar seguimiento a las actividades que cumple el equipo de asistencia técnica tales como planes de acción",
                            VcIcono = "bi bi-search-heart",
                            VcNombre = "Asistencia Técnica"
                        });
                });

            modelBuilder.Entity("SICUENTANOS_Back.Models.Administrador.Parametro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("BEstado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DtFechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("VcCodigoInterno")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VcNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Parametro", (string)null);
                });

            modelBuilder.Entity("SICUENTANOS_Back.Models.Administrador.ParametroDetalle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("BEstado")
                        .HasColumnType("bit");

                    b.Property<decimal>("DCodigoIterno")
                        .HasPrecision(17, 3)
                        .HasColumnType("decimal(17,3)");

                    b.Property<Guid>("ParametroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("RangoDesde")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("RangoHasta")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("TxDescripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VcCodigoInterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VcNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ParametroId");

                    b.ToTable("ParametroDetalle", (string)null);
                });

            modelBuilder.Entity("SICUENTANOS_Back.Models.Administrador.RangosGestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("BEstado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DtFechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<double>("Porcentaje")
                        .HasColumnType("float");

                    b.Property<string>("VcColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VcNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RangosGestion", (string)null);
                });

            modelBuilder.Entity("SICUENTANOS_Back.Models.Administrador.Actividad", b =>
                {
                    b.HasOne("SICUENTANOS_Back.Models.Administrador.Modulo", "Modulo")
                        .WithMany("Actividades")
                        .HasForeignKey("ModuloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Actividad_Modulo");

                    b.Navigation("Modulo");
                });

            modelBuilder.Entity("SICUENTANOS_Back.Models.Administrador.ParametroDetalle", b =>
                {
                    b.HasOne("SICUENTANOS_Back.Models.Administrador.Parametro", "Parametro")
                        .WithMany("ParametroDetalle")
                        .HasForeignKey("ParametroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parametro");
                });

            modelBuilder.Entity("SICUENTANOS_Back.Models.Administrador.Modulo", b =>
                {
                    b.Navigation("Actividades");
                });

            modelBuilder.Entity("SICUENTANOS_Back.Models.Administrador.Parametro", b =>
                {
                    b.Navigation("ParametroDetalle");
                });
#pragma warning restore 612, 618
        }
    }
}
